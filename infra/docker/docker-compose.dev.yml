services:
  db:
    image: tensorchord/pgvecto-rs:pg15-v0.2.0
    container_name: tourism-db
    env_file:
      - ./.env  
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # （任意）起動待ちのためのヘルスチェック
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: tourism-redis
    # ホストから直接使わないならコメントアウト
    # ports:
    #   - "6379:6379"
    restart: unless-stopped

  api:
    build:
      context: ../../apps/api
      dockerfile: Dockerfile
    container_name: tourism-api
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ../../apps/api:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  web:
    build:
      context: ../../apps/web
      dockerfile: Dockerfile
    container_name: tourism-web
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ../../apps/web:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    command: npm run dev
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
